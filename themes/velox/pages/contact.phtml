<?= Data::set('page.title', $title) ?>

<?= View::partial('hero', [
    'title'=> 'Contact',
    'subtitle'=> 'Check out the form down below.',
    'class' => 'is-medium is-primary is-bold'
]) ?>

<?= View::partial('text', [
    'heading' => [
        'content' => 'Cool Stuff!',
        'class' => 'title',
    ],
    'paragraph' => [
        'content' => 'As you have guessed by now, the main idea of VELOX is to keep it as simple as it can be. <br>Often when creating small websites, you normally have a few pages to make that will hardly get updated, you can generate and cache these pages as static HTML files and serve them on demand. For other pages like this one, you have to keep it dynamic, VELOX gives you the ability to do that and a lot more other cool stuff.'
    ],
]) ?>

<?= View::partial('form', [
    'message' => $message ?? null,
]) ?>

<?= View::partial('text-image', [
    'heading' => [
        'content' => 'Keep it concise. Keep it VELOX!',
        'class' => 'title',
    ],
    'paragraph' => [
        'content' => 'Keep it concise. DRY! Although it is simple, VELOX does not compromise on flexibility and scalability. All content you have seen till now consists of a bunch of reusable pieces of code in form of Partials, Pages, and Layouts, in addition to that, there are also themes that can inherit from each other. VELOX provides a lot of helpers that are more than sufficient to do the job it was intended to do.'
    ],
    'image' => [
        'src' => Path::resolveUrlFromAssets('images/velox.png'),
        'alt' => 'VELOX',
        'caption' => 'Lorem ipsum dolor sit amet'
    ]
]) ?>
